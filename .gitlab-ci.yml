image:  golang:alpine

variables:
#  ARTIFACTS_DIR: artifacts
  GO_PROJECT: gitlab.com/KevinZTW/taggy

before_script:
  - go version
  - export GO111MODULE=on
#  - mkdir -p ${CI_PROJECT_DIR}/${ARTIFACTS_DIR}

stages:
  - build
  - test
  - deploy

gotest:
  stage: test
  script:
    - go test ./...


gobuild_n_push_image:
  stage: build
  image: gitlab/dind
  script:
      - docker build -t registry.gitlab.com/KevinZTW/taggy:$CI_COMMIT_SHORT_SHA .
      - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
      - docker push registry.gitlab.com/KevinZTW/taggy:$CI_COMMIT_SHORT_SHA

#      - docker build -t registry.gitlab.com/cpay2019/cpay-core_service:latest .
#      - docker push registry.gitlab.com/cpay2019/cpay-core_service:latest
#    - go build -o  ${CI_PROJECT_DIR}/${ARTIFACTS_DIR}/main
#  artifacts:
#    paths:
#      - ${ARTIFACTS_DIR}
#    expire_in: 1h


godeploy:
  stage: deploy
  before_script:
    - mkdir -p ~/.ssh
    - echo -e "$AWS_SSH_KEY" > ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
    - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
  script:
    - ssh ec2-user@52.196.91.152 -- "docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY && docker pull registry.gitlab.com/kevinZTW/taggy:$CI_COMMIT_SHORT_SHA && docker run --name taggy -d -h taggy -p 5050:5050 registry.gitlab.com/kevinZTW/taggy:$CI_COMMIT_SHORT_SHA"